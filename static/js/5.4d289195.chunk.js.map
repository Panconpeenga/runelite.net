{"version":3,"sources":["routes/xp-show.js","components/meta.js","components/footer.js","components/layout.js"],"names":["parseDate","date","from","Date","value","isNaN","parseFloat","parsed","match","dayjs","subtract","toDate","parseInt","capitalizeFirstLetter","string","charAt","toUpperCase","slice","numberWithCommas","x","toString","replace","createValueBadge","suffix","Object","preact__WEBPACK_IMPORTED_MODULE_6__","class","safeDate","skillNames","keys","skills","XpShow","props","_this","_home_travis_build_runelite_runelite_net_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_travis_build_runelite_runelite_net_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_travis_build_runelite_runelite_net_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","startDate","endDate","_this2","end","start","setState","fetchReleases","then","fetchXp","skill","name","map","_this3","_ref","xp","collectedXp","_components_layout__WEBPACK_IMPORTED_MODULE_20__","_components_meta__WEBPACK_IMPORTED_MODULE_25__","title","concat","hero","toDateString","toLowerCase","key","_home_travis_build_runelite_runelite_net_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","sort","a","b","indexOf","_ref2","playerSkill","rank","preact_router__WEBPACK_IMPORTED_MODULE_8__","href","getTime","alt","src","recharts__WEBPACK_IMPORTED_MODULE_11__","height","recharts__WEBPACK_IMPORTED_MODULE_12__","data","filter","recharts__WEBPACK_IMPORTED_MODULE_13__","dataKey","recharts__WEBPACK_IMPORTED_MODULE_14__","hide","recharts__WEBPACK_IMPORTED_MODULE_15__","recharts__WEBPACK_IMPORTED_MODULE_16__","recharts__WEBPACK_IMPORTED_MODULE_17__","fill","recharts__WEBPACK_IMPORTED_MODULE_18__","syncId","xpEntry","domain","reversed","recharts__WEBPACK_IMPORTED_MODULE_19__","connectNulls","stroke","Component","connect","getXp","getCollectedXp","dispatch","bindActionCreators","Meta","_this$props","description","author","document","querySelector","text","setAttribute","Footer","preact","Layout","children","fullWidth","objectWithoutProperties","style","objectSpread","maxWidth","assign","id","footer"],"mappings":"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","file":"static/js/5.4d289195.chunk.js","sourcesContent":["import { h, Component } from 'preact'\nimport { connect } from 'preact-redux'\nimport { Link } from 'preact-router'\nimport { bindActionCreators } from 'redux'\nimport dayjs from 'dayjs'\nimport {\n  Cell,\n  LineChart,\n  BarChart,\n  Bar,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer\n} from 'recharts'\nimport Layout from '../components/layout'\nimport { fetchReleases } from '../modules/git'\nimport { fetchXp, getXp, getCollectedXp } from '../modules/xp'\nimport hero from '../_data/hero'\nimport skills from '../_data/skills'\nimport Meta from '../components/meta'\nimport './xp-show.css'\n\nfunction isNumeric(value) {\n  return !isNaN(value - parseFloat(value))\n}\n\nfunction parseDate(date, from) {\n  if (date === 'now') {\n    date = new Date()\n  } else if (!isNumeric(date)) {\n    const parsed = date.match(/(\\d+)(\\w+)/)\n    date = dayjs(from)\n      .subtract(parsed[1], parsed[2])\n      .toDate()\n  } else {\n    date = new Date(parseInt(date, 10))\n  }\n\n  return date\n}\n\nconst capitalizeFirstLetter = string =>\n  string.charAt(0).toUpperCase() + string.slice(1)\nconst numberWithCommas = x => x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\nconst createValueBadge = (value, suffix) =>\n  value >= 0 ? (\n    <span class=\"badge badge-success\">\n      +{numberWithCommas(value)} {suffix}\n    </span>\n  ) : (\n    <span class=\"badge badge-danger\">\n      {numberWithCommas(value)} {suffix}\n    </span>\n  )\n\nconst safeDate = date => date || new Date()\nconst skillNames = Object.keys(skills)\nconst flattenMap = map =>\n  Object.keys(map).map(key => ({\n    name: key,\n    ...map[key]\n  }))\n\nclass XpShow extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      startDate: new Date(),\n      endDate: new Date()\n    }\n  }\n\n  componentDidMount() {\n    const endDate = safeDate(parseDate(this.props.end, new Date()))\n    const startDate = safeDate(parseDate(this.props.start, endDate))\n\n    this.setState({\n      startDate,\n      endDate\n    })\n\n    this.props.fetchReleases().then(() =>\n      this.props.fetchXp({\n        skill: this.props.skill,\n        name: this.props.name,\n        start: startDate,\n        end: endDate\n      })\n    )\n  }\n\n  render({ name, skill, xp, collectedXp }) {\n    return (\n      <Layout>\n        <Meta title={`Experience Tracker - ${hero.title}`} />\n        <h1>\n          {name} /{' '}\n          <small class=\"text-muted\">\n            {skill} / {this.state.startDate.toDateString().toLowerCase()} /{' '}\n            {this.state.endDate.toDateString().toLowerCase()}\n          </small>\n        </h1>\n        <hr />\n        <div class=\"row\">\n          <div class=\"col-xl-3 col-md-4 col-sm-12 col-xs-12\">\n            <ul class=\"list-group list-group-small\">\n              {flattenMap(collectedXp)\n                .sort(\n                  (a, b) =>\n                    skillNames.indexOf(a.name) - skillNames.indexOf(b.name)\n                )\n                .map(({ name: playerSkill, rank, xp }) => (\n                  <Link\n                    class={\n                      'list-group-item list-group-item-action' +\n                      (skill === playerSkill ? ' active' : '')\n                    }\n                    key={playerSkill}\n                    href={`/xp/show/${playerSkill}/${name}/${this.state.startDate.getTime()}/${this.state.endDate.getTime()}`}\n                  >\n                    <img\n                      class=\"icon\"\n                      alt={playerSkill}\n                      src={`/img/skillicons/${playerSkill}.png`}\n                    />{' '}\n                    <span class=\"d-md-none d-lg-inline\">\n                      {capitalizeFirstLetter(playerSkill)}\n                    </span>\n                    <span class=\"float-right\">\n                      {createValueBadge(rank, '')} {createValueBadge(xp, 'xp')}\n                    </span>\n                  </Link>\n                ))}\n            </ul>\n          </div>\n          <div class=\"col-xl-9 col-md-8 col-sm-12 col-xs-12\">\n            <h5>\n              <small>Total experience gained</small>\n            </h5>\n            <ResponsiveContainer height={300}>\n              <BarChart\n                data={skillNames\n                  .filter(skill => skill !== 'overall')\n                  .map(skill => ({\n                    name: capitalizeFirstLetter(skill),\n                    value: collectedXp[skill] ? collectedXp[skill].xp : 0\n                  }))}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis hide />\n                <Tooltip />\n                <Bar dataKey=\"value\">\n                  {skillNames\n                    .filter(skill => skill !== 'overall')\n                    .map(skill => (\n                      <Cell fill={skills[skill]} />\n                    ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n\n            <h5>\n              <small>Total ranks gained</small>\n            </h5>\n            <ResponsiveContainer height={300}>\n              <BarChart\n                data={skillNames.map(skill => ({\n                  name: capitalizeFirstLetter(skill),\n                  value: collectedXp[skill] ? collectedXp[skill].rank : 0\n                }))}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis hide />\n                <Tooltip />\n                <Bar dataKey=\"value\">\n                  {skillNames.map(skill => (\n                    <Cell fill={skills[skill]} />\n                  ))}\n                </Bar>\n              </BarChart>\n            </ResponsiveContainer>\n\n            <h5>\n              <small>{capitalizeFirstLetter(skill)} ranks</small>\n            </h5>\n            <ResponsiveContainer height={300}>\n              <LineChart\n                syncId=\"date\"\n                data={xp.map(xpEntry => ({\n                  name: xpEntry.date.toDateString(),\n                  value: xpEntry[skill + '_rank']\n                }))}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis domain={['dataMin', 'dataMax']} reversed hide />\n                <Tooltip />\n                <Line connectNulls dataKey=\"value\" stroke={skills[skill]} />\n              </LineChart>\n            </ResponsiveContainer>\n\n            <h5>\n              <small>{capitalizeFirstLetter(skill)} experience</small>\n            </h5>\n            <ResponsiveContainer height={300}>\n              <LineChart\n                syncId=\"date\"\n                data={xp.map(xpEntry => ({\n                  name: xpEntry.date.toDateString(),\n                  value: xpEntry[skill + '_xp']\n                }))}\n              >\n                <XAxis dataKey=\"name\" />\n                <YAxis domain={['dataMin', 'dataMax']} hide />\n                <Tooltip />\n                <Line connectNulls dataKey=\"value\" stroke={skills[skill]} />\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default connect(\n  (state, props) => ({\n    xp: getXp(state, props),\n    collectedXp: getCollectedXp(state, props)\n  }),\n  dispatch => bindActionCreators({ fetchReleases, fetchXp }, dispatch)\n)(XpShow)\n","import { Component } from 'preact'\n\nclass Meta extends Component {\n  componentDidMount() {\n    const { title, description, author } = this.props\n    document.querySelector('title').text = title || ''\n    document\n      .querySelector('meta[name=description]')\n      .setAttribute('content', description || '')\n    document\n      .querySelector('meta[name=author]')\n      .setAttribute('content', author || '')\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default Meta\n","import { h } from 'preact'\n\nconst Footer = () => (\n  <div>\n    <hr />\n    Developed with <i class=\"fas fa-heart\" /> and <i class=\"fas fa-coffee\" />{' '}\n    using <a href=\"https://getbootstrap.com/\">Bootstrap</a>,{' '}\n    <a href=\"https://reactjs.org/\">React</a> and{' '}\n    <a href=\"https://fontawesome.com/\">Font Awesome</a>\n  </div>\n)\n\nexport default Footer\n","import { h } from 'preact'\nimport Footer from './footer'\n\nconst Layout = ({ children, fullWidth, ...props }) => {\n  props.class = props.class ? 'container ' + props.class : 'container'\n  props.style = {\n    ...(props.style || {}),\n    maxWidth: fullWidth ? '100%' : ''\n  }\n\n  return (\n    <div {...props} id=\"layout\">\n      {children}\n      <Footer />\n    </div>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}